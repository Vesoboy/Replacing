@model IEnumerable<ReplaceWord>
@{
    ViewData["Title"] = "Page";
}
    <div class="d-flex justify-content-end">
        <div class="p-1">
            @await Html.PartialAsync("AddWord", Model.FirstOrDefault())
        </div>
    </div>
    <div class="d-flex justify-content-end">
        <div class="p-1">
            <a asp-controller="Home" asp-action="Index">
                <button type="button" class="btn btn-primary">Вернуться</button>
            </a>
        </div>
    </div>
    <h2>Алфавит</h2>

@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Старый символ</th>
                <th>Новый символ</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var word in Model)
            {
                <tr>
                    <td class="align-middle text-break">@word.OldSymbol</td>
                    <td class="align-middle text-break">@word.NewSymbol</td>
                    <td class="align-middle">
                        <div class="row justify-content-start">
                            <div class="col-7">
                                @await Html.PartialAsync("DeleteWord",word)
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>База данных пуста.</p>
}

@if (Model.Any())
{
<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" href="/Home/Index?page=@i">@i</a>
            </li>
        }
    </ul>
</nav>
}
